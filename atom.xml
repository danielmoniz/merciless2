<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Noah Watkins.]]></title>
  <link href="http://noahdesu.com/atom.xml" rel="self"/>
  <link href="http://noahdesu.com/"/>
  <updated>2011-12-14T23:13:09-08:00</updated>
  <id>http://noahdesu.com/</id>
  <author>
    <name><![CDATA[Noah Watkins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RAMCloud Recovery and Research Philosophy]]></title>
    <link href="http://noahdesu.com/blog/2011/11/30/ramcloud-recovery-and-research-philosophy/"/>
    <updated>2011-11-30T22:58:00-08:00</updated>
    <id>http://noahdesu.com/blog/2011/11/30/ramcloud-recovery-and-research-philosophy</id>
    <content type="html"><![CDATA[<p>In the YouTube video below John Ousterhout talks at LinkedIn about the
RAMCloud project and the recovery mechanism that it uses. The
<a href="https://ramcloud.stanford.edu/wiki/display/ramcloud/Home">RAMCloud project</a> is building a scalable, durable, entirely in-memory data store.
Data in RAMCloud is served from a single in-memory copy. Since only one copy
exists in memory (stable storage holds backups) a server crash means there is
no opporunitiy for fail-over. To avoid unavailability of data for long
periods, the goal is to recover fast using many spindles within the cluster,
aiming for 1-2 second recovery times that appear only as a delay to any
application.  Recovery in RAMCloud is fascinating!</p>

<iframe width="560" height="315"
src="http://www.youtube.com/embed/lcUvU3b5co8" frameborder="0"
allowfullscreen></iframe>


<p>I was also thrilled to hear that the RAMCloud research group Ousterhout is
running at Stanford is aiming to produce production quality code. In the video
John explains that it is an awful waste of time to produce code for research
papers, only to toss everything to the side afterwards. I agree entirely, and
would even make a stronger statement that aiming for high-quality open code
the way RAMCloud is produces better research and better students. If I ever
find myself running a lab in the future, I know code quality and open review
will be integral part of our research workflow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flickr Interestingness Downloadr]]></title>
    <link href="http://noahdesu.com/blog/2011/04/18/flickr-interestingness-helper/"/>
    <updated>2011-04-18T12:00:00-07:00</updated>
    <id>http://noahdesu.com/blog/2011/04/18/flickr-interestingness-helper</id>
    <content type="html"><![CDATA[<p>I use the standard MacOS gallery screensaver with a large collection of
high-resolution photos which I&#8217;ve been collecting for several years. My
primary source of photos is <a href="http://www.flickr.com">Flickr</a>, and in particular the
<a href="http://www.flickr.com/explore/interesting/7days/">Interestingness / Last 7 Days</a> page is a jackpot of great images. As
much fun as sitting around clicking <code>RELOAD!</code> is, I wanted to make the task a
bit more efficient.</p>

<p>I wrote a script <code>interestingness.py</code> (shown below) that downloads the last 24
hours worth of photos from the <em>interestingness</em> Flickr category.
Additionally, it only saves the largest available version of each image. Once
the images are all in a single directory, I open them all up in <em>Preview</em> and
use <code>Cmd-Backspace</code> to remove the images I don&#8217;t want. After that, the
contents of the directory can be moved to the screeensaver archive folder.</p>

<p>To use the script you&#8217;ll need a Flickr API access key, and the Flickr API
Python library.</p>

<h4>Flickr API Key</h4>

<ol>
<li>Sign up for a Flickr account (it&#8217;s free) at <a href="http://www.flickr.com">flickr.com</a>.</li>
<li>Request a <a href="http://www.flickr.com/services/api/">Flickr API key</a>.</li>
<li>Save the <em>API Key</em> and <em>API Secret</em> (you&#8217;ll need them for the next step).</li>
</ol>


<h4>Flickr Python Library</h4>

<ol>
<li>Download <a href="http://flickrpy.googlecode.com/svn/trunk/flickr.py"><code>flickr.py</code></a> from the <a href="http://code.google.com/p/flickrpy/">flickrpy</a> project.</li>
<li>Edit <code>flickr.py</code>: set the variables <code>API_KEY</code> and <code>API_SECRET</code> near the top of the file.</li>
</ol>


<h3>Running the Script</h3>

<ol>
<li>Copy and paste the script below to a file called <code>interestingness.py</code></li>
<li>Run as <code>python interestingness.py</code></li>
<li>Enjoy (tested on MacOS and Linux)</li>
</ol>


<figure class='code'><figcaption><span>interestingness.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">flickr</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">subprocess</span> <span class="kn">import</span> <span class="n">Popen</span><span class="p">,</span> <span class="n">PIPE</span><span class="p">,</span> <span class="n">STDOUT</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">_curl_get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">verbose</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
</span><span class='line'>    <span class="n">p</span> <span class="o">=</span> <span class="n">Popen</span><span class="p">([</span><span class="s">&quot;curl&quot;</span><span class="p">,</span> <span class="s">&quot;-O&quot;</span><span class="p">,</span> <span class="n">url</span><span class="p">],</span> <span class="n">stdout</span><span class="o">=</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">STDOUT</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">verbose</span><span class="p">:</span>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">_wget_get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">verbose</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
</span><span class='line'>    <span class="n">p</span> <span class="o">=</span> <span class="n">Popen</span><span class="p">([</span><span class="s">&quot;wget&quot;</span><span class="p">,</span> <span class="n">url</span><span class="p">],</span> <span class="n">stdout</span><span class="o">=</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">STDOUT</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">verbose</span><span class="p">:</span>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">_check_downloader</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
</span><span class='line'>    <span class="n">test_url</span> <span class="o">=</span> <span class="s">&quot;http://www.google.com/index.html&quot;</span>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;Checking for &quot;</span><span class="o">+</span><span class="n">name</span><span class="o">+</span><span class="s">&quot; support...&quot;</span>
</span><span class='line'>        <span class="n">f</span><span class="p">(</span><span class="n">test_url</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;...&quot;</span><span class="o">+</span><span class="n">name</span><span class="o">+</span><span class="s">&quot; supported&quot;</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">f</span>
</span><span class='line'>    <span class="k">except</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;...&quot;</span><span class="o">+</span><span class="n">name</span><span class="o">+</span><span class="s">&quot; not supported&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'><span class="n">_downloader</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="ow">not</span> <span class="n">_downloader</span><span class="p">:</span>
</span><span class='line'>    <span class="n">_downloader</span> <span class="o">=</span> <span class="n">_check_downloader</span><span class="p">(</span><span class="n">_wget_get</span><span class="p">,</span> <span class="s">&quot;wget&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="ow">not</span> <span class="n">_downloader</span><span class="p">:</span>
</span><span class='line'>    <span class="n">_downloader</span> <span class="o">=</span> <span class="n">_check_downloader</span><span class="p">(</span><span class="n">_curl_get</span><span class="p">,</span> <span class="s">&quot;cURL&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="ow">not</span> <span class="n">_downloader</span><span class="p">:</span>
</span><span class='line'>    <span class="k">raise</span> <span class="ne">Exception</span><span class="p">(</span><span class="s">&quot;Please install cURL or wget&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">_choose_largest</span><span class="p">(</span><span class="n">photo</span><span class="p">):</span>
</span><span class='line'>    <span class="n">specs</span> <span class="o">=</span> <span class="n">photo</span><span class="o">.</span><span class="n">getSizes</span><span class="p">()</span>
</span><span class='line'>    <span class="n">specs</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">s</span><span class="p">:</span> <span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="s">&#39;height&#39;</span><span class="p">],</span> <span class="n">s</span><span class="p">[</span><span class="s">&#39;width&#39;</span><span class="p">],</span> <span class="n">s</span><span class="p">[</span><span class="s">&#39;source&#39;</span><span class="p">]),</span> <span class="n">specs</span><span class="p">)</span>
</span><span class='line'>    <span class="n">specs</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">specs</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">s</span><span class="p">:</span> <span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">reverse</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">specs</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">photos</span> <span class="o">=</span> <span class="n">flickr</span><span class="o">.</span><span class="n">interestingness</span><span class="p">()</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">photo</span> <span class="ow">in</span> <span class="n">photos</span><span class="p">:</span>
</span><span class='line'>        <span class="n">url</span> <span class="o">=</span> <span class="n">_choose_largest</span><span class="p">(</span><span class="n">photo</span><span class="p">)</span>
</span><span class='line'>        <span class="n">_downloader</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">verbose</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
